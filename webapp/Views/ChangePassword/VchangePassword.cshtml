
<script src="~/Scripts/util/jsUtilCambioGuardia.js"></script>

<div id="content">

    <div class="well" style="padding:0px 30px 10px 30px; background-color:white;">
        <div class="row wrapper">
            <div style="width: 100%; display:flex; flex-direction:row; flex-wrap:nowrap; justify-content:space-between; text-align:center; align-items:center;">
                <h2><i class="fa fa-edit fa-fw"></i> Cambiar Clave</h2>
               
            </div>
            <p><i class="fa fa-angle-right" style="margin-right:5px"></i>[Realice la actualización de clave de su cuenta de usuario.]</p>
        </div>

    </div>


    <div id="widget-grid">

        <div class="row">
            <article class="col-xs-6">

                <div class="jarviswidget jarviswidget-color-blue" id="wid-id-perfil" data-widget-editbutton="false" data-widget-custombutton="false" style="border: 2px solid #2F4050">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>Cambio Clave </h2>
                    </header>
                    <div style="border:none;">
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->
                        </div>
                        <div class="widget-body">
                            <form id="frmUsuario" class="smart-form client-form" onsubmit="return false">
                                <div style="margin-bottom:10px;">
                                    <h3>Usuario: <span id="NameUser"></span></h3>
                                </div>
                                <section>
                                    <label class="input">
                                        <i class="icon-append fa fa-unlock" style="font-size:20px; width:30px; color:#1AB394;"></i>
                                        <input type="password" name="clave" placeholder="Clave actual" id="clave" autocomplete="off">
                                        <b class="tooltip tooltip-bottom-right">clave actual</b>
                                    </label>
                                </section>
                                <section>
                                    <label class="input">
                                        <i class="icon-append fa fa-unlock-alt" style="font-size:20px; width:30px;color:#1AB394;"></i>
                                        <input type="password" name="NuevaClave" placeholder="Nueva clave" id="NuevaClave" autocomplete="off">
                                        <b class="tooltip tooltip-bottom-right">Nueva clave</b>
                                    </label>
                                </section>
                                <section>
                                    <label class="input">
                                        <i class="icon-append fa fa-lock" style="font-size:20px; width:30px;color:#1AB394;"></i>
                                        <input type="password" name="ConfirmaClave" placeholder="Confirmar clave" id="ConfirmaClave" autocomplete="off">
                                        <b class="tooltip tooltip-bottom-right">Confirmación de clave</b>
                                    </label>
                                </section>

                                <div style="display:flex; flex-flow: row nowrap; justify-content:flex-end">
                                    <button type="submit" class="btn btn-primary" id="btnGuardar" style="padding:5px 10px;">
                                        <i class="fa fa-save"></i>Guardar
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </div>

</div>


<script type="text/javascript">

    var USER = "@User.Identity.Name.ToUpper().ToString()";
    var split = USER.split(',')

    $("#NameUser").append(split[1]);
        /*----------------------------------------------------------------------------------------------- VARIABLES*/
        var EtiquetaFocus = '';
        /*----------------------------------------------------------------------------------------------- FUNCIONES GUARDAR/ACTUALIZAR/ELIMINAR ETC*/

        function cambiarClave() {
            
            var txtClave = $("#clave").val().trim();
            var txtNuevaClave = $("#NuevaClave").val().trim();

            $("#CargaTemporal").removeClass("hidden");
            $.ajax({
                type: "POST",
                url: tRutaServidor + "/User/CambiarClave",
                dataType: "json",
                data: "clave=" + txtClave + "&claveNueva=" + txtNuevaClave,
                success: function (resultado) {
                    if (resultado == "1") {
                        $("#CargaTemporal").addClass("hidden");
                        toastr.options.timeOut = nTiempoMedio;
                        toastr.options.extendedTimeOut = nTiempoCorto;
                        /*success - info - warning - error*/
                        var $toast = toastr["success"](tMensajeActualizadoExito, tTituloExito); $toastlast = $toast;
                        $("#clave").val("");
                        $("#NuevaClave").val("");
                        $("#ConfirmaClave").val("");
                        
                    } else if (resultado == "2") {
                        $("#CargaTemporal").addClass("hidden");
                        toastr.options.timeOut = nTiempoMedio;
                        toastr.options.extendedTimeOut = nTiempoMedio;
                        /*success - info - warning - error*/
                        var $toast = toastr["error"](tMensajeClaveIncorrecta, tTituloError); $toastlast = $toast;
                    } else if (resultado == "4") {
                        $("#CargaTemporal").addClass("hidden");
                        toastr.options.timeOut = nTiempoMedio;
                        toastr.options.extendedTimeOut = nTiempoMedio;
                        /*success - info - warning - error*/
                        var $toast = toastr["error"](tMensajeErrorYaExiste, tTituloError); $toastlast = $toast;
                    } else if (resultado == "3") {
                        $("#CargaTemporal").addClass("hidden");
                        toastr.options.timeOut = nTiempoMedio;
                        toastr.options.extendedTimeOut = nTiempoMedio;
                        /*success - info - warning - error*/
                        var $toast = toastr["error"](tValidacionPersonaInactivoB, tTituloError); $toastlast = $toast;
                    } else if (resultado == "5") {
                        $("#CargaTemporal").addClass("hidden");
                        toastr.options.timeOut = nTiempoMedio;
                        toastr.options.extendedTimeOut = nTiempoMedio;
                        /*success - info - warning - error*/
                        var $toast = toastr["error"](tValidacionPerfilInactivo, tTituloError); $toastlast = $toast;
                    } else if (resultado == "6") {
                        $("#CargaTemporal").addClass("hidden");
                        toastr.options.timeOut = nTiempoMedio;
                        toastr.options.extendedTimeOut = nTiempoMedio;
                        /*success - info - warning - error*/
                        var $toast = toastr["error"](tValidacionUsuarioInactivo, tTituloError); $toastlast = $toast;
                    } else if (resultado == "0") {
                        $("#CargaTemporal").addClass("hidden");
                        toastr.options.timeOut = nTiempoMedio;
                        toastr.options.extendedTimeOut = nTiempoMedio;
                        /*success - info - warning - error*/
                        var $toast = toastr["error"](tMensajeErrorDesconocido, tTituloError); $toastlast = $toast;
                        console.log("Mensaje del error : " + resultado)
                    } else {
                        $("#CargaTemporal").addClass("hidden");
                        toastr.options.timeOut = nTiempoMedio;
                        toastr.options.extendedTimeOut = nTiempoMedio;
                        /*success - info - warning - error*/
                        var $toast = toastr["error"](tMensajeErrorDesconocido, tTituloError); $toastlast = $toast;
                        console.log("Mensaje del error : " + resultado)
                    }

                },
                error: function (xhr, ajaxOptions, thrownError) {
                    $("#CargaTemporal").addClass("hidden");
                    /*fallo al llamar a la funcion ajax*/
                    toastr.options.timeOut = nTiempoLargo;
                    toastr.options.extendedTimeOut = nTiempoLargo;
                    /*success - info - warning - error*/
                    var $toast = toastr["error"](tMensajeErrorConexion, tTituloErrorConexion); $toastlast = $toast;
                    console.log("ERROR AJAX : " + ajaxOptions);
                    console.log("ERROR AJAX : " + thrownError);
                    console.log(xhr.responseText);
                    console.log(xhr);
                }
            });
        }
        /*----------------------------------------------------------------------------------------------- ADICIONALES*/
        $('#ButtonHiddenBox').click(function () {
            var x = document.getElementById("HiddenBox");
            if (x.style.display === "none") {
                $('#HiddenBox').slideDown();
                document.getElementById("ButtonHiddenBox").innerHTML = '<i class="fa fa-chevron-up"></i>';
            } else {
                $('#HiddenBox').slideUp();
                document.getElementById("ButtonHiddenBox").innerHTML = '<i class="fa fa-chevron-down"></i>';
            }
        });
        /*----------------------------------------------------------------------------------------------- ASIGNAR FUNCIONES*/

        $("#btnGuardar").click(function () {

            $.validator.addMethod("regx", function (value, element, regexpr) {
                return regexpr.test(value);
            }, "Caracteres invalidos");

            var $registerForm = $("#frmUsuario").validate({
                rules: {
                    clave: {
                        required: true,
                        minlength: 3,
                        maxlength: 20,
                        regx: RePassword
                    },
                    NuevaClave: {
                        required: true,
                        minlength: 3,
                        maxlength: 20,
                        regx: RePassword
                    },
                    ConfirmaClave: {
                        minlength: 3,
                        maxlength: 20,
                        equalTo: "#NuevaClave",
                        regx: RePassword
                    }
                },
                messages: {
                    clave: {
                        required: tCampoRequerido,
                        minlength: tMinLength,
                        maxlength: tMaxLength,
                        regx: tCaracteresNoValido
                    },
                    NuevaClave: {
                        required: tCampoRequerido,
                        minlength: tMinLength,
                        maxlength: tMaxLength,
                        equalTo: tClavesIguales,
                        regx: tCaracteresNoValido
                    },
                    ConfirmaClave: {

                        minlength: tMinLength,
                        maxlength: tMaxLength,
                        equalTo: tClavesIguales,
                        regx: tCaracteresNoValido
                    }
                },
                submitHandler: function (form) {

                    var Clave = $("#clave").val();
                    var NuevaClave = $("#NuevaClave").val();
                    var ConfirmaClave = $("#ConfirmaClave").val();

                    if (Clave == NuevaClave) {

                        toastr.options.timeOut = nTiempoMedio;
                        toastr.options.extendedTimeOut = nTiempoMedio;
                        /*success - info - warning - error*/
                        var $toast = toastr["error"](tClavesNoIguales, tTituloError); $toastlast = $toast;
                    } else {
                        cambiarClave();
                    }
                },

                errorPlacement: function (error, element) {
                    error.insertAfter(element.parent());
                }
            });


        });

        /*----------------------------------------------------------------------------------------------- METODOS INICIALES*/

</script>